import scala.collection.mutable.ListBuffer

object Problem002
{
    /**
      * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
      * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
      * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
      * @param args
      */
    def main(args: Array[String]): Unit =
    {
        val sum = fib(4000000).filter(p => p % 2 == 0).sum
        println(sum)
    }

    def fib(upTo:Int): ListBuffer[Int] = {
        val list: ListBuffer[Int] = ListBuffer.empty[Int]
        list += 1
        list += 2

        var a = 1
        var b = 2
        var c = a + b
        while (c < upTo) {
            list += c
            a = b
            b = c
            c = a + b
        }
        list
    }
}
